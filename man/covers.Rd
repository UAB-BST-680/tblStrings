% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/point_gap.R
\name{covers}
\alias{covers}
\alias{omits}
\title{Coverage}
\usage{
covers(x, value, strict_coverage = TRUE)

omits(x, value, strict_omission = FALSE)
}
\arguments{
\item{x}{a \code{pointGap} object or an object that can be coerced into
a \code{pointGap} object (see \link{as_pointGap}).}

\item{value}{a numeric value that may or may not be contained in
the gap.}

\item{strict_coverage}{a logical value. If \code{TRUE}, then strict
coverage is tested. Strict coverage will not be met if \code{value}
is on the boundary of the gap. If \code{FALSE}, then a \code{value}
on the boundary will be considered inside of the gap.}

\item{strict_omission}{a logical value. If \code{TRUE}, then strict
omission is tested. Strict omission will not be met if \code{value}
is on the boundary of the gap. If \code{FALSE}, then a \code{value}
on the boundary will be considered inside the gap.}
}
\value{
a \code{logical} vector the same size as \code{x} when \code{x} is converted
to a \code{pointGap}.
}
\description{
Determining whether a gap covers a value. \code{covers}
will determine whether a gap contains a given \code{value}. The
negation function, \code{omits}, will indicate whether a gap does
not contain a given \code{value}.
}
\examples{

p <- pointGap(1, 0, 2)

covers(p, value = c(1, 2, 3))
omits(p, value = c(1, 2, 3))

covers(p, value = c(1, 2, 3), strict_coverage = FALSE)
omits(p, value = c(1,2,3), strict_omission = TRUE)

}
