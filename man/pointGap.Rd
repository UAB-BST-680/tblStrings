% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/point_gap.R
\name{pointGap}
\alias{pointGap}
\title{Point and gap values}
\usage{
pointGap(
  point,
  lower,
  upper,
  point_label = "Estimate",
  gap_label = "95\% CI",
  brac_left = "(",
  brac_right = ")",
  brac_middle = ", ",
  max_decimals = 2,
  big_mark = ","
)
}
\arguments{
\item{point}{numeric vector of point estimates}

\item{lower}{numeric vector of lower-bounds.}

\item{upper}{numeric vector of upper-bounds.}

\item{point_label}{character value describing the point value. Default
is "Estimate".}

\item{gap_label}{character value describing what goes inside of the
gap. Default is "95\% CI".}

\item{brac_left}{character vector with values that will become the left
closing bracket in the point gap value.}

\item{brac_right}{character vector with values that will become the right
closing bracket in the point gap value.}

\item{brac_middle}{character vector with values that will become the text
separating lower and upper bound estimates.}

\item{max_decimals}{an integer value that will determine the maximum
number of decimals in the output. Larger numbers will not use the
maximum number of decimals in order to maintain the same, or at
least similar length as smaller numbers.}

\item{big_mark}{a character value used to separate number groups to the
left of the decimal point. See \link{prettyNum} for more details on this.
Set this input to '' to negate it's effect.}
}
\value{
point gap (\code{pointGap}) value(s).
}
\description{
Scientific tables often include values of the form
estimate (lower value, upper value). It is somewhat tedious to work
with these values in R because to do so, one will usually have to
round their numbers evenly, then paste them into whatever bracket
notation is required by their target journal, and then struggle to
work with the resulting character strings because they can no longer
access the numeric data. Point gap \code{pointGap} vectors are meant
to make the  process of developing tables a little less painful.
For instance, \code{pointGap} vectors
\itemize{
\item automatically format data into the standard point (gap) form.
\item automatically round numeric values based on magnitude so that
tabulated values will have more or less the same width.
\item contain underlying numeric data that allows you to sort \code{pointGap}
vectors or develop conditional formatting based on gap coverage.
}
}
\note{
Although \code{pointGap} objects contain numeric data, only the first 15
figures in the numeric values are retained. (this is because the data
are converted to a string of characters). Accuracy beyond this level
of precision should not be expected, but should also not be needed
in most tabular summaries. The reason \code{pointGap} values keep this
structure instead of the more flexible record style format (see
\link[vctrs:rcrd]{vctrs::rcrd}) is that record style objects are not easily passed
into tabulation functions such as \link[flextable:flextable]{flextable::flextable} and
\link[knitr:kable]{knitr::kable}.
}
\examples{

x <- rnorm(10)
y <- x + rnorm(10)

model <- lm(y~x)

est <- coef(model)['x']
ci <- confint(model)['x', ]

pointGap(point = est, lower = ci['2.5 \%'], upper = ci['97.5 \%'])


}
\seealso{
as_pointGap
}
